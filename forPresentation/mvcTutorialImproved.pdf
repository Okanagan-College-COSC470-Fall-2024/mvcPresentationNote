{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ada0338e-566b-4683-a94b-87b14958e315",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"p1.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b5a9410d-b25c-4e75-896c-b2f2c56487e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "// The Example with nested if-else statements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5d299e8-141f-45c8-a536-1839d288a6b3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1e84981b-937a-4333-b9c0-ff0ae1684308",
   "metadata": {},
   "outputs": [],
   "source": [
    "import java.io.BufferedReader;\n",
    "import java.io.IOException;\n",
    "import java.io.InputStreamReader;\n",
    "import java.io.PrintWriter;\n",
    "import java.net.ServerSocket;\n",
    "import java.net.Socket;\n",
    "\n",
    "public class MessageServer {\n",
    "    public static void main(String[] args) {\n",
    "        int port = 12345; // Define the port on which the server will listen\n",
    "        boolean keepAlive = true;\n",
    "        try (ServerSocket serverSocket = new ServerSocket(port)) {\n",
    "            System.out.println(\"Server is listening on port \" + port);\n",
    "\n",
    "            while (keepAlive) { // Server runs continuously\n",
    "                try (Socket socket = serverSocket.accept();  // Accept an incoming connection\n",
    "                     BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n",
    "                     PrintWriter output = new PrintWriter(socket.getOutputStream(), true)) { // Auto-flush is set to true\n",
    "\n",
    "                    System.out.println(\"New client connected\");\n",
    "                    String message;\n",
    "                    while ((message = input.readLine()) != null) { // Keep reading until client disconnects\n",
    "                        System.out.println(\"Received: \" + message);\n",
    "\n",
    "                        String response;\n",
    "                        if (message.equalsIgnoreCase(\"exit\")) {\n",
    "                            response = \"Client initiated connection close\";\n",
    "                            output.println(response);\n",
    "                            System.out.println(response);\n",
    "                            keepAlive = false;\n",
    "                            break; // Exit the read loop, closing the socket\n",
    "                        }\n",
    "\n",
    "                        // Process the received message using nested if-else logic\n",
    "                        if (message.contains(\"example\")) {\n",
    "                            if (message.length() > 7) {\n",
    "                                response = \"Complex logic for example, long message\";\n",
    "                            } else {\n",
    "                                response = \"Complex logic for example, short message\";\n",
    "                            }\n",
    "                        } else if (message.contains(\"test\")) {\n",
    "                            if (message.contains(\"x\")) {\n",
    "                                response = \"Complex logic for test containing 'x'\";\n",
    "                            } else {\n",
    "                                response = \"Alternative complex logic for test not containing 'x'\";\n",
    "                            }\n",
    "                        } else if (message.contains(\"hello\")) {\n",
    "                            if (message.startsWith(\"h\")) {\n",
    "                                response = \"Complex logic for hello starting with 'h'\";\n",
    "                            } else {\n",
    "                                response = \"Alternative complex logic for hello not starting with 'h'\";\n",
    "                            }\n",
    "                        } else {\n",
    "                            response = \"Complex logic when no conditions are met\";\n",
    "                        }\n",
    "\n",
    "                        System.out.println(response); // Log the response on server\n",
    "                        output.println(response); // Send the response back to the client\n",
    "                    }\n",
    "                } catch (IOException e) {\n",
    "                    System.out.println(\"Exception caught when listening for a connection\");\n",
    "                    System.out.println(e.getMessage());\n",
    "                }\n",
    "            }\n",
    "        } catch (IOException e) {\n",
    "            System.out.println(\"Could not listen on port: \" + port);\n",
    "            System.out.println(e.getMessage());\n",
    "        }\n",
    "        System.out.println(\"Shutting down the server ...\");\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b6fa36d5-c816-4d30-b17c-37eb02bb4311",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Server is listening on port 12345\n",
      "New client connected\n",
      "Received: exit\n",
      "Client initiated connection close\n",
      "Shutting down the server ...\n"
     ]
    }
   ],
   "source": [
    "MessageServer server = new MessageServer();\n",
    "server.main(null);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c9f25d1-60e5-4bcc-b9be-e1f0a81f5f13",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52ed5640-1dc6-400c-8118-4a704ab335ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "72e47fbe-a0bf-41a5-bdd8-1a33975ad1d6",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e1.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5e700eb-63c0-46fc-853f-4d06e6cc3f9e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "55afc14c-691b-43b0-aa0f-9f5b02de1da1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "88f2ec61-f68c-4e27-a2ad-f98db2cbf085",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"p2.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db241872-1de0-45f0-a543-38a92af91754",
   "metadata": {},
   "outputs": [],
   "source": [
    "//Implementing models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cd1cc6a4-e812-4ee9-83c5-16f893c3fbe6",
   "metadata": {},
   "outputs": [],
   "source": [
    "public abstract class MessageModel{\n",
    "    abstract String processMessage(String message);\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "05258149-fe0f-410e-af9f-d422cac38f7b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3cc5780b-8a24-4e26-8fd0-9abf0e56b57b",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class ExampleModel extends MessageModel{\n",
    "    public String processMessage(String message) {\n",
    "        if (message.length() > 7) {\n",
    "            return \"Complex logic for example, long message\";\n",
    "        } else {\n",
    "            return \"Complex logic for example, short message\";\n",
    "        }\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bbff9f82-02c1-4694-ba42-0e76d9eb2e6e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "be2223a6-a0dd-4d21-906f-adb078774fd8",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class TestModel extends MessageModel{\n",
    "    public String processMessage(String message) {\n",
    "        if (message.contains(\"x\")) {\n",
    "            return \"Complex logic for test containing 'x'\";\n",
    "        } else {\n",
    "            return \"Alternative complex logic for test not containing 'x'\";\n",
    "        }\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d2a4f90-42c2-4a26-a642-f80077a63663",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c287e04e-b987-467f-9bdf-373db319eb3b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "17d399ef-e3a3-4c66-bb2c-861860e66e73",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class HelloModel extends MessageModel{\n",
    "    public String processMessage(String message) {\n",
    "        if (message.startsWith(\"h\")) {\n",
    "            return \"Complex logic for hello starting with 'h'\";\n",
    "        } else {\n",
    "            return \"Alternative complex logic for hello not starting with 'h'\";\n",
    "        }\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14bd3371-c739-4d59-afc3-438a375ce306",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7bfeef49-3460-4328-8a8f-d7329984b964",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e591f0b6-f1c4-434b-8529-d309b9837840",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a46911af-2a94-4976-abfd-459d21a800d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class DefaultModel extends MessageModel{\n",
    "    public String processMessage(String message) {\n",
    "        return \"Complex logic when no conditions are met\";\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6bff3978-dbd8-44d5-a14a-35a7c7d43e03",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08510340-e68e-4c97-81c5-6df59580c57c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "732a7ef9-c21d-4f08-a354-348a955bfd92",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class NameModel extends MessageModel{\n",
    "    public String processMessage(String message) {\n",
    "        if (message.contains(\"Mohamad\")) {\n",
    "            return \"Complex logic for name containing 'Mohamad'\";\n",
    "        } else {\n",
    "            return \"Alternative complex logic for name not containing 'Mohamad'\";\n",
    "        }\n",
    "    }\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97a3b217-6880-46a8-a39f-08371a647c8d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c3e62e65-55d5-4331-b77d-1c2987186adc",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e2.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b2d7b67-584e-4a68-82f9-a50fe9ca3eab",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8eb78f4f-05ad-4fd8-a20f-f770610a1604",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a41d324f-d289-4bf2-b6c7-9ff71cb40a49",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"p3.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4df4a0b-ac52-498c-96d0-ac2e4236f37e",
   "metadata": {},
   "outputs": [],
   "source": [
    "//Implementing Controllers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7620e1c2-9815-45f2-9deb-c3ceae4c656c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "73938352-03bd-49b5-b498-496b6db4f4a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class  MessageController {\n",
    "    MessageModel model;\n",
    "    String triggerText;\n",
    "    public MessageController(){\n",
    "        \n",
    "    }\n",
    "    public void setTrigger(String trigger){\n",
    "        triggerText = trigger;\n",
    "    }\n",
    "    public void setModel(MessageModel model){\n",
    "        this.model = model;\n",
    "    }\n",
    "    public String processMessage(String message){\n",
    "        return model.processMessage(message);\n",
    "    }\n",
    "        public String getTriggerText() {\n",
    "        return this.triggerText;\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "22b4d23d-cb64-41e1-9fdf-4f10ed56eebc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f4dfa0e6-4171-4aa5-b683-1ba050f322d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class ExampleController extends MessageController {\n",
    "    \n",
    "    private ExampleModel model = new ExampleModel();\n",
    "    public ExampleController(){\n",
    "        setModel(model);\n",
    "        setTrigger(\"example\");\n",
    "    }\n",
    "\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d74af909-fbe5-4360-94c0-f84272e603e2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "70d85a7e-8818-4559-9a88-e1ddc2e19257",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "476b3213-167b-48dc-8763-c7344be0bda6",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class TestController extends MessageController {\n",
    "    private TestModel model = new TestModel();\n",
    "\n",
    "    public TestController(){\n",
    "        setModel(model);\n",
    "        setTrigger(\"test\");\n",
    "    }\n",
    "\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "27dddd2b-617b-425d-abf4-bbb548d089cf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cd955ccb-2823-4d4b-b9a8-af2f918eecec",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class HelloController extends MessageController {\n",
    "    private HelloModel model = new HelloModel();\n",
    "\n",
    "    public HelloController(){\n",
    "        setModel(model);\n",
    "         setTrigger(\"hello\");\n",
    "    }\n",
    "\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fee7e82-6d89-47ed-88cb-077fe8caa96b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "788ba509-94a1-46e4-8822-1d8a1004f186",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8b48e913-c09f-403f-abdd-93123ba85191",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class DefaultController extends MessageController {\n",
    "    private DefaultModel model = new DefaultModel();\n",
    "\n",
    "\n",
    "    public DefaultController(){\n",
    "        setModel(model);\n",
    "         setTrigger(\"default\");\n",
    "    }\n",
    "\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d0d2621-458f-45e3-9aaf-2a08931f3132",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c23b5e5a-8dd4-4f52-b923-74d835e1d7d4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "04157421-c52b-4229-873d-832304274702",
   "metadata": {},
   "outputs": [],
   "source": [
    "public class NameController extends MessageController {\n",
    "    private NameModel model = new NameModel();\n",
    "\n",
    "\n",
    "    public NameController(){\n",
    "        setModel(model);\n",
    "        setTrigger(\"name\");\n",
    "    }\n",
    "\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3fff27ff-0e6b-4a15-a8b9-de7cd9688d6a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "dfbff8ab-096e-45c3-991e-63f1f72c6582",
   "metadata": {},
   "outputs": [],
   "source": [
    "import java.util.ArrayList;\n",
    "import java.util.List;\n",
    "\n",
    "public class MessageHandler {\n",
    "    private List<MessageController> controllers = new ArrayList<>();\n",
    "\n",
    "    public MessageHandler() {\n",
    "        controllers.add(new ExampleController());\n",
    "        controllers.add(new TestController());\n",
    "        controllers.add(new HelloController());\n",
    "        controllers.add(new DefaultController());\n",
    "        controllers.add(new NameController());\n",
    "    }\n",
    "\n",
    "    public String handle(String message) {\n",
    "        for (MessageController controller : controllers) {\n",
    "            if (message.contains(controller.getTriggerText())) {\n",
    "                return controller.processMessage(message);\n",
    "            }\n",
    "        }\n",
    "        return new DefaultController().processMessage(message);  // Default fallback\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "663eb85e-ad8d-4186-b648-65e8efe23828",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "65343961-c805-4801-a019-8aaf35a653e3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b97e962-8729-4cee-94c8-cd84fb43b63b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a277e1c2-d441-4ebd-ac57-0bf09e9d5814",
   "metadata": {},
   "outputs": [],
   "source": [
    "import java.io.BufferedReader;\n",
    "import java.io.IOException;\n",
    "import java.io.InputStreamReader;\n",
    "import java.io.PrintWriter;\n",
    "import java.net.ServerSocket;\n",
    "import java.net.Socket;\n",
    "\n",
    "public class MessageServer {\n",
    "    public static void main(String[] args) {\n",
    "        int port = 12345;\n",
    "        boolean keepAlive = true;\n",
    "        MessageHandler messageHandler = new MessageHandler();\n",
    "\n",
    "        try (ServerSocket serverSocket = new ServerSocket(port)) {\n",
    "            System.out.println(\"Server is listening on port \" + port);\n",
    "\n",
    "            while (keepAlive) {\n",
    "                try (Socket socket = serverSocket.accept();\n",
    "                     BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n",
    "                     PrintWriter output = new PrintWriter(socket.getOutputStream(), true)) {\n",
    "\n",
    "                    System.out.println(\"New client connected\");\n",
    "                    String message;\n",
    "                    while ((message = input.readLine()) != null) {\n",
    "                        System.out.println(\"Received: \" + message);\n",
    "\n",
    "                        if (message.equalsIgnoreCase(\"exit\")) {\n",
    "                            String response = \"Client initiated connection close\";\n",
    "                            output.println(response);\n",
    "                            System.out.println(response);\n",
    "                            keepAlive = false;\n",
    "                            break;\n",
    "                        }\n",
    "\n",
    "                        String response = messageHandler.handle(message);\n",
    "                        System.out.println(response);\n",
    "                        output.println(response);\n",
    "                    }\n",
    "                } catch (IOException e) {\n",
    "                    System.out.println(\"Exception caught when listening for a connection\");\n",
    "                    System.out.println(e.getMessage());\n",
    "                }\n",
    "            }\n",
    "        } catch (IOException e) {\n",
    "            System.out.println(\"Could not listen on port: \" + port);\n",
    "            System.out.println(e.getMessage());\n",
    "        }\n",
    "        System.out.println(\"Shutting down the server ...\");\n",
    "    }\n",
    "}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "146922e3-4daa-4ed0-9bb8-82105dd2f84e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4fd52913-ba38-417f-8085-8a69d9370bf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Server is listening on port 12345\n",
      "New client connected\n",
      "Received: test\n",
      "Alternative complex logic for test not containing 'x'\n",
      "Received: hello\n",
      "Complex logic for hello starting with 'h'\n",
      "Received: example\n",
      "Complex logic for example, short message\n",
      "Received: name\n",
      "Alternative complex logic for name not containing 'Mohamad'\n"
     ]
    }
   ],
   "source": [
    "MessageServer server = new MessageServer();\n",
    "server.main(null);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b32c616f-2338-4b94-b4ff-952c4e19620b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "ce57c4b6-7a9c-4289-9b37-0a1e5fa0dadf",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e6.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64090b05-d378-4f1e-8506-c2972b426a56",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d6bd1fd-3d3c-4d5a-bedc-b3791a445e21",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc58731a-ad03-4212-8a3d-c346df2520a1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b2fb017d-b24e-4393-b724-66d734888c0c",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e4.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "86ed4241-d173-405d-b300-86cb326663a8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc4f0029-afda-4d56-9eb8-79d394b2db03",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9800c967-2b96-4aed-b0ee-f5b3f217248e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a08d904f-dae8-4873-ba11-b47039cca110",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e5.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68842ad3-d6c8-4ce6-bd1a-e6e039176313",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e0e94526-29e9-4b2b-affc-c50cb1486e0b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "494ee359-e4ad-4cef-97a3-d828602cf02a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3c004a60-c31f-47b4-9bff-10c95ff91e9a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "86de12ca-7cc8-4706-b2ea-d9b78bf5bfd4",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e7.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f81bce9e-5db1-44c5-aafe-438c477dc6a9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2743b2d0-b535-4f3f-b14c-f66d3b072659",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3eccb38b-b2eb-4f06-8f5f-03b9b26edf85",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "5413d00b-6eb8-4f52-823d-671762d81b25",
   "metadata": {},
   "source": [
    "<img title=\"a title\" alt=\"Alt text\" src=\"e8.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fec4609c-7ddc-4da5-83a8-14e870d004a2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Java",
   "language": "java",
   "name": "java"
  },
  "language_info": {
   "codemirror_mode": "java",
   "file_extension": ".jshell",
   "mimetype": "text/x-java-source",
   "name": "Java",
   "pygments_lexer": "java",
   "version": "23.0.1+11-39"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
